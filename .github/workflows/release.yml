name: tag and release
on:
  pull_request_target:
    types:
      - closed
    branches:
      - main

jobs:
  build:
    if: github.event_name == 'pull_request_target' && github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: Install dependencies
        run: |
          go get .
          go install gioui.org/cmd/gogio@latest

      - name: Build NoitaBackup GUI executables
        run: |
          .\gogio.exe -target=windows -arch=386   -ldflags="-H=windowsgui -s -w" -o noitabackup-386.exe .
          .\gogio.exe -target=windows -arch=amd64 -ldflags="-H=windowsgui -s -w" -o noitabackup-amd64.exe .

      - name: Build NoitaBackup CLI executables
        run: |
          .\gogio.exe -target=windows -arch=386   -ldflags="-s -w" -o noitabackup-cli-386.exe .
          .\gogio.exe -target=windows -arch=amd64 -ldflags="-s -w" -o noitabackup-cli-amd64.exe .

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: noitabackup-executables
          path: noitabackup*.exe

      - name: Test with the Go CLI
        run: go test

  tag-and-release:
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: version-tag
        id: tag
        uses: anothrNick/github-tag-action@1.69.0
        env:
          WITH_V: true
          VERBOSE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_API_TAGGING: false

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: noitabackup-executables

      - name: Release
        uses: softprops/action-gh-release@v2.0.5
        with:
          files: |
            noitabackup-386.exe
            noitabackup-amd64.exe
            noitabackup-cli-386.exe
            noitabackup-cli-amd64.exe
          tag_name: ${{ steps.tag.outputs.new_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}